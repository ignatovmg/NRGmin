Energy minimization using LBFGS.

A molecule can be passed using two modes: single file mode or rec/lig mode.
Rec/lig mode is used, when structure is passed using rec-* lig-* arguments,
and single file mode is enabled for the opposite. Structure can be passed
using a set of 4 files pdb, psf, rtf, prm or as a single json file which
contains coordinates as well as force field parameters. Also and pair of
json and pdb can be passed, if one want to use topology and forcefield parameters
from json and coordinates from pdb.

All flags can be as well filled by passing a global setup file to --setup-json,
so this one argument is enough to run minimization.

Examples of different minimization setups can be found in examples/energy_setup.

    Output control:

    --out_pdb Where to write the minimized molecule(s)
    --out_json Log file with energy terms
    --out_prefix Overrides the above two options
    --print_step Log energies for every step
    --print_stage Log energies for every stage
    --print_noe_matrix Log NOE matrix is NOE calculation is on
    --verbosity 0 - QUIET, 1 - ERROR, 2 - WARNING, 3 - INFO, >=4 - DEBUG


    Single file mode:

    --psf Geometry in CHARMM (old) format
    --prm Forcefield parameters
    --rtf Topology file with residues description
    --pdb Atom coordinates (can contain multiple models)
    --json Json file with coordinates, geometry and force field parameters

    Parameters for rec/lig mode

    --rec_psf Receptor geometry in CHARMM (old) format
    --rec_prm Receptor forcefield parameters
    --rec_rtf Receptor topology file
    --rec_pdb Receptor atom coordinates (can contain multiple models)
    --rec_json Receptor json file with coordinates, geometry and force field parameters
    --lig_psf Ligand geometry in CHARMM (old) format
    --lig_prm Ligand forcefield parameters
    --lig_rtf Ligand topology file with residues description
    --lig_pdb Ligand atom coordinates (can contain multiple models)
    --lig_json Ligand json file with coordinates, geometry and force field parameters


    Minimization setup

    --nsteps Number of minimization steps

    Energy terms switches. Everything is on by default except for GBSA

    --bonds_on/--bonds_off Bonds energy term
    --angles_on/--angles_off Angles
    --dihedrals_on/--dihedrals_off Dihedrals
    --impropers_on/--impropers_off Impropers
    --vdw_on/--vdw_off VDW
    --vdw03_on/--vdw03_off 1-4 VDW
    --eleng_on/--eleng_off Coulomb electrostatics
    --elengs03_on/--elengs03_off 1-4 Coulomb electrostatics
    --ace_on/--ace_off ACE
    --gbsa_on/--gbsa_off GBSA

    Energy parameters.

    --tol Tolerance during minimization (default 5e-4)
    --nbcut Non-bonded cutoff (default 13.0)
    --ace_efac ACE efac (default 0.5)
    --scale_vdw_s03 (default 1.0)
    --scale_coul_s03 (default 0.8333333)
    --eeps Water epsilon (default 80.0)
    --gbcut GB cutoff for descreening and effective bondii calculation. (default 25.0 from Amber)

    Fixed atoms

    --fixed_pdb PDB file with fixed atoms (uses coordinates, not atom IDs)
    --fix_receptor Fix receptor atoms (works only in rec/lig mode)
    --fix_ligand Fix ligand atoms (works only in rec/lig mode)

    Distance restraints

    --pair_springs_txt Text file setup for pairwise restraints
    --point_springs_txt Text file setup for pointwise restraints

    NOE setup (available with -DNOE=ON during build)

    --noe_json Json file setup for NOE

    Density setup

    --density_json Json file setup for density fitting

    Global setup in json format

    --setup_json This file duplicates all the other options. It also allows for
                 multistage minimization protocol, where each stage can have
                 different minimization terms

    Miscellaneous

    --num_threads Number of OpenMP threads to use. 0 (default) means using maximum number of threads
    --score_only Score without doing minimization
    --pull_ligand_away Pull ligand 200 A away from rec COM, often combined with --score_only
    --help Show this message and exit

